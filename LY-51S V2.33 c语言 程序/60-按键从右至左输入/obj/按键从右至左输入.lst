C51 COMPILER V7.06   __键_佑抑磷笫_入                                                      09/10/2012 09:23:59 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE __键_佑抑磷笫_入
OBJECT MODULE PLACED IN .\obj\按键从右至左输入.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE 按键从右至左输入.c BROWSE DEBUG OBJECTEXTEND PRINT(.\obj\按键从右至左输入.l
                    -st) OBJECT(.\obj\按键从右至左输入.obj)

stmt level    source

   1          /*-----------------------------------------------
   2            名称：单个独立按键依次输入控制
   3            论坛：www.doflye.net
   4            编写：shifang
   5            日期：2009.5
   6            修改：无
   7            内容：如计算器输入数据形式相同 从右至左
   8          ------------------------------------------------*/
   9          #include<reg52.h> //包含头文件，一般情况不需要改动，头文件包含特殊功能寄存器的定义
  10          
  11          sbit KEY1=P3^0;  //定义按键输入端口
  12          sbit KEY2=P3^1;
  13          sbit KEY3=P3^2;
  14          sbit KEY4=P3^3;
  15          sbit KEY5=P3^4;
  16          sbit KEY6=P3^5;
  17          sbit KEY7=P3^6;
  18          sbit KEY8=P3^7;
  19          
  20          
  21          #define DataPort P0 //定义数据端口 程序中遇到DataPort 则用P0 替换
  22          sbit LATCH1=P2^2;//定义锁存使能端口 段锁存
  23          sbit LATCH2=P2^3;//                 位锁存
  24          
  25          unsigned char code dofly_DuanMa[10]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f};// 显示段码值0~9
  26          unsigned char code dofly_WeiMa[]={0xfe,0xfd,0xfb,0xf7,0xef,0xdf,0xbf,0x7f};//分别对应相应的数码管点亮,即位
             -码
  27          unsigned char TempData[10]; //存储显示值的全局变量
  28          
  29          void DelayUs2x(unsigned char t);//us级延时函数声明 
  30          void DelayMs(unsigned char t); //ms级延时
  31          void Display(unsigned char FirstBit,unsigned char Num);//数码管显示函数
  32          unsigned char KeyScan(void);//键盘扫描
  33          void Init_Timer0(void);//定时器初始化
  34          /*------------------------------------------------
  35                              主函数
  36          ------------------------------------------------*/
  37          void main (void)
  38          {
  39   1      unsigned char num,i,j;                  
  40   1      unsigned char temp[8];
  41   1      Init_Timer0();
  42   1      
  43   1      while (1)         //主循环
  44   1        {
  45   2      
  46   2       num=KeyScan();
  47   2       if(num)
  48   2         {
  49   3         if(i<8)
  50   3          {
  51   4           temp[i]=dofly_DuanMa[num];
  52   4               for(j=0;j<=i;j++)
  53   4              TempData[7-i+j]=temp[j];
C51 COMPILER V7.06   __键_佑抑磷笫_入                                                      09/10/2012 09:23:59 PAGE 2   

  54   4           }
  55   3              i++;
  56   3              if(i==9)//多出一个按键输入为了清屏 原本应该为8
  57   3                 {
  58   4                i=0;
  59   4            for(j=0;j<8;j++)//清屏
  60   4               TempData[j]=0;
  61   4             }
  62   3         }
  63   2        }
  64   1      }
  65          /*------------------------------------------------
  66           uS延时函数，含有输入参数 unsigned char t，无返回值
  67           unsigned char 是定义无符号字符变量，其值的范围是
  68           0~255 这里使用晶振12M，精确延时请使用汇编,大致延时
  69           长度如下 T=tx2+5 uS 
  70          ------------------------------------------------*/
  71          void DelayUs2x(unsigned char t)
  72          {   
  73   1       while(--t);
  74   1      }
  75          /*------------------------------------------------
  76           mS延时函数，含有输入参数 unsigned char t，无返回值
  77           unsigned char 是定义无符号字符变量，其值的范围是
  78           0~255 这里使用晶振12M，精确延时请使用汇编
  79          ------------------------------------------------*/
  80          void DelayMs(unsigned char t)
  81          {
  82   1           
  83   1       while(t--)
  84   1       {
  85   2           //大致延时1mS
  86   2           DelayUs2x(245);
  87   2               DelayUs2x(245);
  88   2       }
  89   1      }
  90          /*------------------------------------------------
  91           显示函数，用于动态扫描数码管
  92           输入参数 FirstBit 表示需要显示的第一位，如赋值2表示从第三个数码管开始显示
  93           如输入0表示从第一个显示。
  94           Num表示需要显示的位数，如需要显示99两位数值则该值输入2
  95          ------------------------------------------------*/
  96          void Display(unsigned char FirstBit,unsigned char Num)
  97          {
  98   1            static unsigned char i=0;
  99   1                
 100   1      
 101   1                 DataPort=0;   //清空数据，防止有交替重影
 102   1             LATCH1=1;     //段锁存
 103   1             LATCH1=0;
 104   1      
 105   1             DataPort=dofly_WeiMa[i+FirstBit]; //取位码 
 106   1             LATCH2=1;     //位锁存
 107   1             LATCH2=0;
 108   1      
 109   1             DataPort=TempData[i]; //取显示数据，段码
 110   1             LATCH1=1;     //段锁存
 111   1             LATCH1=0;
 112   1             
 113   1                 i++;
 114   1             if(i==Num)
 115   1                    i=0;
C51 COMPILER V7.06   __键_佑抑磷笫_入                                                      09/10/2012 09:23:59 PAGE 3   

 116   1      
 117   1      
 118   1      }
 119          /*------------------------------------------------
 120                              定时器初始化子程序
 121          ------------------------------------------------*/
 122          void Init_Timer0(void)
 123          {
 124   1       TMOD |= 0x01;    //使用模式1，16位定时器，使用"|"符号可以在使用多个定时器时不受影响                 
 125   1       //TH0=0x00;          //给定初值
 126   1       //TL0=0x00;
 127   1       EA=1;            //总中断打开
 128   1       ET0=1;           //定时器中断打开
 129   1       TR0=1;           //定时器开关打开
 130   1      }
 131          /*------------------------------------------------
 132                           定时器中断子程序
 133          ------------------------------------------------*/
 134          void Timer0_isr(void) interrupt 1 
 135          {
 136   1       TH0=(65536-2000)/256;            //重新赋值 2ms
 137   1       TL0=(65536-2000)%256;
 138   1       
 139   1       Display(0,8);       // 调用数码管扫描
 140   1      
 141   1      }
 142          
 143          /*------------------------------------------------
 144          按键扫描函数，返回扫描键值
 145          ------------------------------------------------*/
 146          unsigned char KeyScan(void)
 147          {
 148   1      /********************************************************/  
 149   1      if(!KEY1)  //如果检测到低电平，说明按键按下
 150   1          {
 151   2               DelayMs(10); //延时去抖，一般10-20ms
 152   2           if(!KEY1)     //再次确认按键是否按下，没有按下则退出
 153   2                 {
 154   3              while(!KEY1);//如果确认按下按键等待按键释放，没有则退出
 155   3                     {
 156   4                         return 1;
 157   4                              }
 158   3                 }
 159   2              }
 160   1      /********************************************************/  
 161   1      else if(!KEY2)  //如果检测到低电平，说明按键按下
 162   1          {
 163   2               DelayMs(10); //延时去抖，一般10-20ms
 164   2           if(!KEY2)     //再次确认按键是否按下，没有按下则退出
 165   2                 {
 166   3              while(!KEY2);//如果确认按下按键等待按键释放，没有则退出
 167   3                     {
 168   4                         return 2;
 169   4                              }
 170   3                 }
 171   2              }
 172   1      /********************************************************/  
 173   1      else if(!KEY3)  //如果检测到低电平，说明按键按下
 174   1          {
 175   2               DelayMs(10); //延时去抖，一般10-20ms
 176   2           if(!KEY3)     //再次确认按键是否按下，没有按下则退出
 177   2                 {
C51 COMPILER V7.06   __键_佑抑磷笫_入                                                      09/10/2012 09:23:59 PAGE 4   

 178   3              while(!KEY3);//如果确认按下按键等待按键释放，没有则退出
 179   3                     {
 180   4                         return 3;
 181   4                              }
 182   3                 }
 183   2              }
 184   1      /********************************************************/  
 185   1      else if(!KEY4)  //如果检测到低电平，说明按键按下
 186   1          {
 187   2               DelayMs(10); //延时去抖，一般10-20ms
 188   2           if(!KEY4)     //再次确认按键是否按下，没有按下则退出
 189   2                 {
 190   3              while(!KEY4);//如果确认按下按键等待按键释放，没有则退出
 191   3                     {
 192   4                         return 4;
 193   4                              }
 194   3                 }
 195   2              }
 196   1      /********************************************************/  
 197   1      else if(!KEY5)  //如果检测到低电平，说明按键按下
 198   1          {
 199   2               DelayMs(10); //延时去抖，一般10-20ms
 200   2           if(!KEY5)     //再次确认按键是否按下，没有按下则退出
 201   2                 {
 202   3              while(!KEY5);//如果确认按下按键等待按键释放，没有则退出
 203   3                     {
 204   4                         return 5;
 205   4                              }
 206   3                 }
 207   2              }
 208   1      /********************************************************/  
 209   1      else if(!KEY6)  //如果检测到低电平，说明按键按下
 210   1          {
 211   2               DelayMs(10); //延时去抖，一般10-20ms
 212   2           if(!KEY6)     //再次确认按键是否按下，没有按下则退出
 213   2                 {
 214   3              while(!KEY6);//如果确认按下按键等待按键释放，没有则退出
 215   3                     {
 216   4                         return 6;
 217   4                              }
 218   3                 }
 219   2              }
 220   1      /********************************************************/  
 221   1      else if(!KEY7)  //如果检测到低电平，说明按键按下
 222   1          {
 223   2               DelayMs(10); //延时去抖，一般10-20ms
 224   2           if(!KEY7)     //再次确认按键是否按下，没有按下则退出
 225   2                 {
 226   3              while(!KEY7);//如果确认按下按键等待按键释放，没有则退出
 227   3                     {
 228   4                         return 7;
 229   4                              }
 230   3                 }
 231   2              }
 232   1      /********************************************************/  
 233   1      else if(!KEY8)  //如果检测到低电平，说明按键按下
 234   1          {
 235   2               DelayMs(10); //延时去抖，一般10-20ms
 236   2           if(!KEY8)     //再次确认按键是否按下，没有按下则退出
 237   2                 {
 238   3              while(!KEY8);//如果确认按下按键等待按键释放，没有则退出
 239   3                     {
C51 COMPILER V7.06   __键_佑抑磷笫_入                                                      09/10/2012 09:23:59 PAGE 5   

 240   4                         return 8;
 241   4                              }
 242   3                 }
 243   2              }
 244   1      /********************************************************/  
 245   1      else
 246   1          return 0;
 247   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    356    ----
   CONSTANT SIZE    =     18    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
