C51 COMPILER V7.06   ÃÜÂëËø                                                                09/10/2012 09:25:52 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE ÃÜÂëËø
OBJECT MODULE PLACED IN .\obj\ÃÜÂëËø.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE ÃÜÂëËø.c BROWSE DEBUG OBJECTEXTEND PRINT(.\obj\ÃÜÂëËø.lst) OBJECT(.\obj\ÃÜÂ
                    -ëËø.obj)

stmt level    source

   1          /*-----------------------------------------------
   2            Ãû³Æ£º¾ØÕó¼üÅÌÄ£ÄâÃÜÂëËø
   3            ÂÛÌ³£ºwww.doflye.net
   4            ±àĞ´£ºshifang
   5            ÈÕÆÚ£º2009.5
   6            ĞŞ¸Ä£ºÎŞ
   7            ÄÚÈİ£ºÄ£ÄâÃÜÂëËø£¬ÃÜÂë¹Ì»¯µ½ROM ²»ÄÜÍ¨¹ı°´¼üÊäÈë¸ü¸Ä
   8          ------------------------------------------------*/
   9          #include<reg52.h> //°üº¬Í·ÎÄ¼ş£¬Ò»°ãÇé¿ö²»ĞèÒª¸Ä¶¯£¬Í·ÎÄ¼ş°üº¬ÌØÊâ¹¦ÄÜ¼Ä´æÆ÷µÄ¶¨Òå
  10          
  11          
  12          #define DataPort P0 //¶¨ÒåÊı¾İ¶Ë¿Ú ³ÌĞòÖĞÓöµ½DataPort ÔòÓÃP0 Ìæ»»
  13          #define KeyPort P1
  14          sbit LATCH1=P2^2;//¶¨ÒåËø´æÊ¹ÄÜ¶Ë¿Ú ¶ÎËø´æ
  15          sbit LATCH2=P2^3;//                 Î»Ëø´æ
  16          
  17          unsigned char code dofly_DuanMa[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,
  18                                                           0x77,0x7c,0x39,0x5e,0x79,0x71};// ÏÔÊ¾¶ÎÂëÖµ0~F
  19          unsigned char code dofly_WeiMa[]={0xfe,0xfd,0xfb,0xf7,0xef,0xdf,0xbf,0x7f};//·Ö±ğ¶ÔÓ¦ÏàÓ¦µÄÊıÂë¹ÜµãÁÁ,¼´Î»
             -Âë
  20          unsigned char TempData[10]; //´æ´¢ÏÔÊ¾ÖµµÄÈ«¾Ö±äÁ¿
  21          unsigned char code password[8]={1,2,3,4,5,6,7,8};
  22          //¿ÉÒÔ¸ü¸Ä´ËÃÜÂë×ö¶à×é²âÊÔ
  23          
  24          void DelayUs2x(unsigned char t);//us¼¶ÑÓÊ±º¯ÊıÉùÃ÷ 
  25          void DelayMs(unsigned char t); //ms¼¶ÑÓÊ±
  26          void Display(unsigned char FirstBit,unsigned char Num);//ÊıÂë¹ÜÏÔÊ¾º¯Êı
  27          unsigned char KeyScan(void);//¼üÅÌÉ¨Ãè
  28          unsigned char KeyPro(void);
  29          void Init_Timer0(void);//¶¨Ê±Æ÷³õÊ¼»¯
  30          /*------------------------------------------------
  31                              Ö÷º¯Êı
  32          ------------------------------------------------*/
  33          void main (void)
  34          {
  35   1      unsigned char num,i,j;                  
  36   1      unsigned char temp[8];
  37   1      bit Flag;
  38   1      Init_Timer0();
  39   1      
  40   1      while (1)         //Ö÷Ñ­»·
  41   1        {
  42   2      
  43   2      
  44   2       num=KeyPro();
  45   2       if(num!=0xff)
  46   2         {
  47   3         if(i==0)
  48   3          {
  49   4               for(j=0;j<8;j++)//ÇåÆÁ
  50   4               TempData[j]=0;
  51   4              }
  52   3         if(i<8)
  53   3           {
C51 COMPILER V7.06   ÃÜÂëËø                                                                09/10/2012 09:25:52 PAGE 2   

  54   4            temp[i]=dofly_DuanMa[num];//°Ñ°´¼üÖµÊäÈëµ½ÁÙÊ±Êı×éÖĞ
  55   4                for(j=0;j<=i;j++)         //Í¨¹ıÒ»¶¨Ë³Ğò°ÑÁÙÊ±Êı×éÖĞ
  56   4                                //µÄÖµ¸³Öµµ½ÏÔÊ¾»º³åÇø£¬´ÓÓÒÍù×óÊäÈë
  57   4               TempData[7-i+j]=temp[j]; 
  58   4            }
  59   3              i++;   //ÊäÈëÊıÖµÀÛ¼Ó
  60   3              if(i==9)//Õı³£µÈÓÚ8¼´¿É£¬ÓÉÓÚÎÒÃÇĞèÒª¿ÕÒ»¸öÓÃÓÚÇåÆÁ£¬
  61   3                              //ÇåÆÁÊ±µÄ°´¼ü²»×öÊäÈëÖµ
  62   3                {
  63   4                i=0;
  64   4                Flag=1;//ÏÈ°Ñ±È½ÏÎ»ÖÃ1
  65   4                for(j=0;j<8;j++)//Ñ­»·±È½Ï8¸öÊıÖµ£¬
  66   4                                            //Èç¹ûÓĞÒ»¸ö²»µÈ Ôò×îÖÕFlagÖµÎª0
  67   4                   Flag=Flag&&(temp[j]==dofly_DuanMa[password[j]]);
  68   4                       //±È½ÏÊäÈëÖµºÍÒÑÓĞÃÜÂë
  69   4                for(j=0;j<8;j++)//ÇåÆÁ
  70   4               TempData[j]=0;
  71   4            if(Flag)//Èç¹û±È½ÏÈ«²¿ÏàÍ¬£¬±êÖ¾Î»ÖÃ1
  72   4                 {
  73   5                   TempData[0]=0x3f; // "o"
  74   5               TempData[1]=0x73; // "p"
  75   5                       TempData[2]=0x79; // "E"
  76   5                       TempData[3]=0x54; // "n"
  77   5                       //ËµÃ÷ÃÜÂëÕıÈ·£¬ÊäÈë¶ÔÓ¦²Ù×÷ ÏÔÊ¾"open"
  78   5                      }
  79   4                else 
  80   4                  {
  81   5                       TempData[0]=0x79; // "E"
  82   5               TempData[1]=0x50; // "r"
  83   5                       TempData[2]=0x50; // "r"
  84   5                       //·ñÔòÏÔÊ¾"Err"
  85   5                      }
  86   4      
  87   4                }
  88   3          }   
  89   2        }
  90   1      }
  91          /*------------------------------------------------
  92           uSÑÓÊ±º¯Êı£¬º¬ÓĞÊäÈë²ÎÊı unsigned char t£¬ÎŞ·µ»ØÖµ
  93           unsigned char ÊÇ¶¨ÒåÎŞ·ûºÅ×Ö·û±äÁ¿£¬ÆäÖµµÄ·¶Î§ÊÇ
  94           0~255 ÕâÀïÊ¹ÓÃ¾§Õñ12M£¬¾«È·ÑÓÊ±ÇëÊ¹ÓÃ»ã±à,´óÖÂÑÓÊ±
  95           ³¤¶ÈÈçÏÂ T=tx2+5 uS 
  96          ------------------------------------------------*/
  97          void DelayUs2x(unsigned char t)
  98          {   
  99   1       while(--t);
 100   1      }
 101          /*------------------------------------------------
 102           mSÑÓÊ±º¯Êı£¬º¬ÓĞÊäÈë²ÎÊı unsigned char t£¬ÎŞ·µ»ØÖµ
 103           unsigned char ÊÇ¶¨ÒåÎŞ·ûºÅ×Ö·û±äÁ¿£¬ÆäÖµµÄ·¶Î§ÊÇ
 104           0~255 ÕâÀïÊ¹ÓÃ¾§Õñ12M£¬¾«È·ÑÓÊ±ÇëÊ¹ÓÃ»ã±à
 105          ------------------------------------------------*/
 106          void DelayMs(unsigned char t)
 107          {
 108   1           
 109   1       while(t--)
 110   1       {
 111   2           //´óÖÂÑÓÊ±1mS
 112   2           DelayUs2x(245);
 113   2               DelayUs2x(245);
 114   2       }
 115   1      }
C51 COMPILER V7.06   ÃÜÂëËø                                                                09/10/2012 09:25:52 PAGE 3   

 116          /*------------------------------------------------
 117           ÏÔÊ¾º¯Êı£¬ÓÃÓÚ¶¯Ì¬É¨ÃèÊıÂë¹Ü
 118           ÊäÈë²ÎÊı FirstBit ±íÊ¾ĞèÒªÏÔÊ¾µÄµÚÒ»Î»£¬Èç¸³Öµ2±íÊ¾´ÓµÚÈı¸öÊıÂë¹Ü¿ªÊ¼ÏÔÊ¾
 119           ÈçÊäÈë0±íÊ¾´ÓµÚÒ»¸öÏÔÊ¾¡£
 120           Num±íÊ¾ĞèÒªÏÔÊ¾µÄÎ»Êı£¬ÈçĞèÒªÏÔÊ¾99Á½Î»ÊıÖµÔò¸ÃÖµÊäÈë2
 121          ------------------------------------------------*/
 122          void Display(unsigned char FirstBit,unsigned char Num)
 123          {
 124   1            static unsigned char i=0;
 125   1                
 126   1      
 127   1                 DataPort=0;   //Çå¿ÕÊı¾İ£¬·ÀÖ¹ÓĞ½»ÌæÖØÓ°
 128   1             LATCH1=1;     //¶ÎËø´æ
 129   1             LATCH1=0;
 130   1      
 131   1             DataPort=dofly_WeiMa[i+FirstBit]; //È¡Î»Âë 
 132   1             LATCH2=1;     //Î»Ëø´æ
 133   1             LATCH2=0;
 134   1      
 135   1             DataPort=TempData[i]; //È¡ÏÔÊ¾Êı¾İ£¬¶ÎÂë
 136   1             LATCH1=1;     //¶ÎËø´æ
 137   1             LATCH1=0;
 138   1             
 139   1                 i++;
 140   1             if(i==Num)
 141   1                    i=0;
 142   1      
 143   1      
 144   1      }
 145          /*------------------------------------------------
 146                              ¶¨Ê±Æ÷³õÊ¼»¯×Ó³ÌĞò
 147          ------------------------------------------------*/
 148          void Init_Timer0(void)
 149          {
 150   1       TMOD |= 0x01;    //Ê¹ÓÃÄ£Ê½1£¬16Î»¶¨Ê±Æ÷£¬Ê¹ÓÃ"|"·ûºÅ¿ÉÒÔÔÚÊ¹ÓÃ¶à¸ö¶¨Ê±Æ÷Ê±²»ÊÜÓ°Ïì                 
 151   1       //TH0=0x00;          //¸ø¶¨³õÖµ
 152   1       //TL0=0x00;
 153   1       EA=1;            //×ÜÖĞ¶Ï´ò¿ª
 154   1       ET0=1;           //¶¨Ê±Æ÷ÖĞ¶Ï´ò¿ª
 155   1       TR0=1;           //¶¨Ê±Æ÷¿ª¹Ø´ò¿ª
 156   1      }
 157          /*------------------------------------------------
 158                           ¶¨Ê±Æ÷ÖĞ¶Ï×Ó³ÌĞò
 159          ------------------------------------------------*/
 160          void Timer0_isr(void) interrupt 1 
 161          {
 162   1       TH0=(65536-2000)/256;            //ÖØĞÂ¸³Öµ 2ms
 163   1       TL0=(65536-2000)%256;
 164   1       
 165   1       Display(0,8);       // µ÷ÓÃÊıÂë¹ÜÉ¨Ãè
 166   1      
 167   1      }
 168          
 169          /*------------------------------------------------
 170          °´¼üÉ¨Ãèº¯Êı£¬·µ»ØÉ¨Ãè¼üÖµ
 171          ------------------------------------------------*/
 172          unsigned char KeyScan(void)  //¼üÅÌÉ¨Ãèº¯Êı£¬Ê¹ÓÃĞĞÁĞ·´×ªÉ¨Ãè·¨
 173          {
 174   1       unsigned char cord_h,cord_l;//ĞĞÁĞÖµÖĞ¼ä±äÁ¿
 175   1       KeyPort=0x0f;            //ĞĞÏßÊä³öÈ«Îª0
 176   1       cord_h=KeyPort&0x0f;     //¶ÁÈëÁĞÏßÖµ
 177   1       if(cord_h!=0x0f)    //ÏÈ¼ì²âÓĞÎŞ°´¼ü°´ÏÂ
C51 COMPILER V7.06   ÃÜÂëËø                                                                09/10/2012 09:25:52 PAGE 4   

 178   1       {
 179   2        DelayMs(10);        //È¥¶¶
 180   2        if((KeyPort&0x0f)!=0x0f)
 181   2        {
 182   3          cord_h=KeyPort&0x0f;  //¶ÁÈëÁĞÏßÖµ
 183   3          KeyPort=cord_h|0xf0;  //Êä³öµ±Ç°ÁĞÏßÖµ
 184   3          cord_l=KeyPort&0xf0;  //¶ÁÈëĞĞÏßÖµ
 185   3      
 186   3          while((KeyPort&0xf0)!=0xf0);//µÈ´ıËÉ¿ª²¢Êä³ö
 187   3      
 188   3          return(cord_h+cord_l);//¼üÅÌ×îºó×éºÏÂëÖµ
 189   3         }
 190   2        }return(0xff);     //·µ»Ø¸ÃÖµ
 191   1      }
 192          /*------------------------------------------------
 193          °´¼üÖµ´¦Àíº¯Êı£¬·µ»ØÉ¨¼üÖµ
 194          ------------------------------------------------*/
 195          unsigned char KeyPro(void)
 196          {
 197   1       switch(KeyScan())
 198   1       {
 199   2        case 0x7e:return 0;break;//0 °´ÏÂÏàÓ¦µÄ¼üÏÔÊ¾Ïà¶ÔÓ¦µÄÂëÖµ
 200   2        case 0x7d:return 1;break;//1
 201   2        case 0x7b:return 2;break;//2
 202   2        case 0x77:return 3;break;//3
 203   2        case 0xbe:return 4;break;//4
 204   2        case 0xbd:return 5;break;//5
 205   2        case 0xbb:return 6;break;//6
 206   2        case 0xb7:return 7;break;//7
 207   2        case 0xde:return 8;break;//8
 208   2        case 0xdd:return 9;break;//9
 209   2        case 0xdb:return 10;break;//a
 210   2        case 0xd7:return 11;break;//b
 211   2        case 0xee:return 12;break;//c
 212   2        case 0xed:return 13;break;//d
 213   2        case 0xeb:return 14;break;//e
 214   2        case 0xe7:return 15;break;//f
 215   2        default:return 0xff;break;
 216   2       }
 217   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    466    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
