C51 COMPILER V9.01   I2C                                                                   07/22/2016 18:52:04 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN I2C.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE I2C.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          
   2          /*************************此部分为I2C总线的驱动程序*************************************/
   3          
   4          #include<reg52.h>
   5          #include <intrins.h>
   6          #include <I2C.H>
   7          
   8          #define  NOP()   _nop_()   /* 定义空指令 */
   9          #define  _Nop()  _nop_()   /*定义空指令*/
  10          
  11           
  12          sbit     SCL=P3^1;       //I2C  时钟 
  13          sbit     SDA=P3^0;       //I2C  数据 
  14          bit ack;                 /*应答标志位*/
  15             
  16          
  17          /*******************************************************************
  18                               起动总线函数               
  19          函数原型: void  Start_I2c();  
  20          功能:     启动I2C总线,即发送I2C起始条件.  
  21          ********************************************************************/
  22          void Start_I2c()
  23          {
  24   1        SDA=1;         /*发送起始条件的数据信号*/
  25   1        _Nop();
  26   1        SCL=1;
  27   1        _Nop();        /*起始条件建立时间大于4.7us,延时*/
  28   1        _Nop();
  29   1        _Nop();
  30   1        _Nop();
  31   1        _Nop();    
  32   1        SDA=0;         /*发送起始信号*/
  33   1        _Nop();        /* 起始条件锁定时间大于4μs*/
  34   1        _Nop();
  35   1        _Nop();
  36   1        _Nop();
  37   1        _Nop();       
  38   1        SCL=0;       /*钳住I2C总线，准备发送或接收数据 */
  39   1        _Nop();
  40   1        _Nop();
  41   1      }
  42          
  43          /*******************************************************************
  44                                结束总线函数               
  45          函数原型: void  Stop_I2c();  
  46          功能:     结束I2C总线,即发送I2C结束条件.  
  47          ********************************************************************/
  48          void Stop_I2c()
  49          {
  50   1        SDA=0;      /*发送结束条件的数据信号*/
  51   1        _Nop();       /*发送结束条件的时钟信号*/
  52   1        SCL=1;      /*结束条件建立时间大于4μs*/
  53   1        _Nop();
  54   1        _Nop();
  55   1        _Nop();
C51 COMPILER V9.01   I2C                                                                   07/22/2016 18:52:04 PAGE 2   

  56   1        _Nop();
  57   1        _Nop();
  58   1        SDA=1;      /*发送I2C总线结束信号*/
  59   1        _Nop();
  60   1        _Nop();
  61   1        _Nop();
  62   1        _Nop();
  63   1      }
  64          
  65          /*******************************************************************
  66                           字节数据发送函数               
  67          函数原型: void  SendByte(UCHAR c);
  68          功能:     将数据c发送出去,可以是地址,也可以是数据,发完后等待应答,并对
  69                    此状态位进行操作.(不应答或非应答都使ack=0)     
  70                     发送数据正常，ack=1; ack=0表示被控器无应答或损坏。
  71          ********************************************************************/
  72          void  SendByte(unsigned char  c)
  73          {
  74   1       unsigned char  BitCnt;
  75   1       
  76   1       for(BitCnt=0;BitCnt<8;BitCnt++)  /*要传送的数据长度为8位*/
  77   1          {
  78   2           if((c<<BitCnt)&0x80)SDA=1;   /*判断发送位*/
  79   2             else  SDA=0;                
  80   2           _Nop();
  81   2           SCL=1;               /*置时钟线为高，通知被控器开始接收数据位*/
  82   2            _Nop(); 
  83   2            _Nop();             /*保证时钟高电平周期大于4μs*/
  84   2            _Nop();
  85   2            _Nop();
  86   2            _Nop();         
  87   2           SCL=0; 
  88   2          }
  89   1          
  90   1          _Nop();
  91   1          _Nop();
  92   1          SDA=1;                /*8位发送完后释放数据线，准备接收应答位*/
  93   1          _Nop();
  94   1          _Nop();   
  95   1          SCL=1;
  96   1          _Nop();
  97   1          _Nop();
  98   1          _Nop();
  99   1          if(SDA==1)ack=0;     
 100   1             else ack=1;        /*判断是否接收到应答信号*/
 101   1          SCL=0;
 102   1          _Nop();
 103   1          _Nop();
 104   1      }
 105          
 106          /*******************************************************************
 107                           字节数据接收函数               
 108          函数原型: UCHAR  RcvByte();
 109          功能:        用来接收从器件传来的数据,并判断总线错误(不发应答信号)，
 110                    发完后请用应答函数应答从机。  
 111          ********************************************************************/    
 112          unsigned char   RcvByte()
 113          {
 114   1        unsigned char  retc;
 115   1        unsigned char  BitCnt;
 116   1        
 117   1        retc=0; 
C51 COMPILER V9.01   I2C                                                                   07/22/2016 18:52:04 PAGE 3   

 118   1        SDA=1;                     /*置数据线为输入方式*/
 119   1        for(BitCnt=0;BitCnt<8;BitCnt++)
 120   1            {
 121   2              _Nop();           
 122   2              SCL=0;                  /*置时钟线为低，准备接收数据位*/
 123   2              _Nop();
 124   2              _Nop();                 /*时钟低电平周期大于4.7μs*/
 125   2              _Nop();
 126   2              _Nop();
 127   2              _Nop();
 128   2              SCL=1;                  /*置时钟线为高使数据线上数据有效*/
 129   2              _Nop();
 130   2              _Nop();
 131   2              retc=retc<<1;
 132   2              if(SDA==1)retc=retc+1;  /*读数据位,接收的数据位放入retc中 */
 133   2              _Nop();
 134   2              _Nop(); 
 135   2            }
 136   1        SCL=0;    
 137   1        _Nop();
 138   1        _Nop();
 139   1        return(retc);
 140   1      }
 141          
 142          /********************************************************************
 143                               应答子函数
 144          函数原型:  void Ack_I2c(bit a);
 145          功能:      主控器进行应答信号(可以是应答或非应答信号，由位参数a决定)
 146          ********************************************************************/
 147          void Ack_I2c(bit a)
 148          {
 149   1        
 150   1        if(a==0)SDA=0;              /*在此发出应答或非应答信号 */
 151   1        else SDA=1;
 152   1        _Nop();
 153   1        _Nop();
 154   1        _Nop();      
 155   1        SCL=1;
 156   1        _Nop();
 157   1        _Nop();                    /*时钟低电平周期大于4μs*/
 158   1        _Nop();
 159   1        _Nop();
 160   1        _Nop();  
 161   1        SCL=0;                     /*清时钟线，钳住I2C总线以便继续接收*/
 162   1        _Nop();
 163   1        _Nop();    
 164   1      }
 165          
 166          
 167          
 168          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    159    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       1
END OF MODULE INFORMATION.

C51 COMPILER V9.01   I2C                                                                   07/22/2016 18:52:04 PAGE 4   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
