C51 COMPILER V9.01   DA_AD                                                                 07/22/2016 18:52:04 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE DA_AD
OBJECT MODULE PLACED IN DA-AD.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE DA-AD.C BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /**********************************************************************************
   2          *   光敏电阻和热敏电阻试验                                                        *
   3          *   1.通过本例程了解并掌握AD-DA转换芯片和热敏光敏电阻的基本原理和使用                     *
   4          *   2.了解掌握I2C总线接口的工作原理及一般编程方法。
   5          *   
   6          * 连接方法：参照接线图                                                                                    *
   7          * 通过改变学习板上光敏和热敏电阻实现模拟输入，AD输入通道在第3和第4通道上
   8          * 观察数码管的数字变化情况
   9          * 用遮挡光敏电阻和有触摸热敏电阻可以看到AD的值发生变化                                *
  10          ***********************************************************************************/
  11          
  12          #include<reg52.h>
  13          #include <I2C.H>
  14          
  15          #define  PCF8591 0x90    //PCF8591 地址
  16          
  17          
  18          //7段数码管工作选择 IO
  19          sbit    LS138A=P2^0;  
  20          sbit    LS138B=P2^1;
  21          sbit    LS138C=P2^2;  
  22          
  23          //此表为 LED 的字模, 共阴数码管 0-9  - 
  24          unsigned char code Disp_Tab[] = {0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f}; 
  25          
  26          unsigned char AD_CHANNEL;
  27          unsigned long xdata  LedOut[8];
  28          unsigned int  D[32];
  29                           
  30          
  31          /*******************************************************************
  32          ADC发送字节[命令]数据函数               
  33          *******************************************************************/
  34          bit ISendByte(unsigned char sla,unsigned char c)
  35          {
  36   1         Start_I2c();              //启动总线
  37   1         SendByte(sla);            //发送器件地址
  38   1         if(ack==0)return(0);
  39   1         SendByte(c);              //发送数据
  40   1         if(ack==0)return(0);
  41   1         Stop_I2c();               //结束总线
  42   1         return(1);
  43   1      }
  44          
  45          /*******************************************************************
  46          ADC读字节数据函数               
  47          *******************************************************************/
  48          unsigned char IRcvByte(unsigned char sla)
  49          {  unsigned char c;
  50   1      
  51   1         Start_I2c();          //启动总线
  52   1         SendByte(sla+1);      //发送器件地址
  53   1         if(ack==0)return(0);
  54   1         c=RcvByte();          //读取数据0
  55   1      
C51 COMPILER V9.01   DA_AD                                                                 07/22/2016 18:52:04 PAGE 2   

  56   1         Ack_I2c(1);           //发送非就答位
  57   1         Stop_I2c();           //结束总线
  58   1         return(c);
  59   1      }
  60          
  61          //******************************************************************/
  62          main()
  63          {  char i,j;
  64   1      
  65   1       while(1)
  66   1       {/********以下AD-DA处理*************/  
  67   2         switch(AD_CHANNEL)
  68   2         {
  69   3           case 0: ISendByte(PCF8591,0x41);
  70   3                   D[0]=IRcvByte(PCF8591)*2;  //ADC0 模数转换1  放大2倍显示
  71   3                               break;  
  72   3       
  73   3               case 1: ISendByte(PCF8591,0x42);
  74   3                   D[1]=IRcvByte(PCF8591)*2;  //ADC1  模数转换2
  75   3                               break;  
  76   3      
  77   3               case 2: ISendByte(PCF8591,0x43);
  78   3                   D[2]=IRcvByte(PCF8591);  //ADC2    模数转换3
  79   3                               break;  
  80   3      
  81   3               case 3: ISendByte(PCF8591,0x40);
  82   3                   D[3]=IRcvByte(PCF8591);  //ADC3   模数转换4
  83   3                               break;  
  84   3                 }
  85   2      
  86   2        if(++AD_CHANNEL>3) AD_CHANNEL=0;
  87   2      
  88   2       /********以下将AD3 AD4采集的热名电阻和光敏电阻值送到LED数码管显示*************/
  89   2                              
  90   2               LedOut[0]=Disp_Tab[D[2]%10000/1000];
  91   2           LedOut[1]=Disp_Tab[D[2]%1000/100];
  92   2           LedOut[2]=Disp_Tab[D[2]%100/10]|0x80;
  93   2           LedOut[3]=Disp_Tab[D[2]%10];
  94   2               
  95   2               LedOut[4]=Disp_Tab[D[3]%10000/1000];
  96   2           LedOut[5]=Disp_Tab[D[3]%1000/100];
  97   2           LedOut[6]=Disp_Tab[D[3]%100/10]|0x80;
  98   2           LedOut[7]=Disp_Tab[D[3]%10];  
  99   2                
 100   2              
 101   2               for( i=0; i<8; i++) 
 102   2               {       P0 = LedOut[i];
 103   3                              
 104   3                switch(i)       //使用switch 语句控制138译码器  也可以是用查表的方式 学员可以试着自己修改                               
 105   3                   {      
 106   4                              case 0:LS138A=0; LS138B=0; LS138C=0; break;         
 107   4                      case 1:LS138A=1; LS138B=0; LS138C=0; break;                     
 108   4                      case 2:LS138A=0; LS138B=1; LS138C=0; break; 
 109   4                      case 3:LS138A=1; LS138B=1; LS138C=0; break; 
 110   4                              case 4:LS138A=0; LS138B=0; LS138C=1; break;
 111   4                              case 5:LS138A=1; LS138B=0; LS138C=1; break;
 112   4                              case 6:LS138A=0; LS138B=1; LS138C=1; break;
 113   4                              case 7:LS138A=1; LS138B=1; LS138C=1; break;
 114   4                              
 115   4                   }
 116   3               
 117   3                   for (j = 0 ; j<90 ;j++) { ;}          //扫描间隔时间
C51 COMPILER V9.01   DA_AD                                                                 07/22/2016 18:52:04 PAGE 3   

 118   3                }
 119   2      
 120   2                  P0 = 0; 
 121   2      
 122   2       }  
 123   1      }
 124          
 125          
 126          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    665    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =     32    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     65       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
