C51 COMPILER V9.01   DS1302                                                                08/05/2016 17:44:25 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN ds1302.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ds1302.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*******************************************************************************
   2          *   ÊýÂë¹ÜÏÔÊ¾Ê±ÖÓ                                                             *
   3          * Í¨¹ý±¾Àý³ÌÁË½â DS1302Ê±ÖÓÐ¾Æ¬µÄ»ù±¾Ô­ÀíºÍÊ¹ÓÃ ,Àí½â²¢ÕÆÎÕDS1302Ê±ÖÓÐ¾Æ¬          *
   4          * Çý¶¯³ÌÐòµÄ±àÐ´ÒÔ¼°ÊµÏÖÊý×Ö×Ö·ûÔÚÊýÂë¹ÜÖÐµÄÏÔÊ¾¡£                                                         *
   5          ********************************************************************************/
   6          #include<reg52.h> //°üº¬Í·ÎÄ¼þ£¬Ò»°ãÇé¿ö²»ÐèÒª¸Ä¶¯£¬Í·ÎÄ¼þ°üº¬ÌØÊâ¹¦ÄÜ¼Ä´æÆ÷µÄ¶¨Òå
   7          #include <intrins.h>
   8          
   9          sbit SCK=P3^6;  //Ê±ÖÓ  
  10          sbit SDA=P3^4;  //Êý¾Ý  
  11          sbit RST = P3^5;// DS1302¸´Î»
  12          
  13          sbit LS138A=P2^0;  
  14          sbit LS138B=P2^1;
  15          sbit LS138C=P2^2; 
  16          
  17          bit ReadRTC_Flag;//¶¨Òå¶ÁDS1302±êÖ¾
  18          
  19          unsigned char l_tmpdate[7]={0,0,12,15,5,3,8};//Ãë·ÖÊ±ÈÕÔÂÖÜÄê08-05-15 12:00:00
  20          unsigned char l_tmpdisplay[8];
  21          
  22          code unsigned char write_rtc_address[7]={0x80,0x82,0x84,0x86,0x88,0x8a,0x8c}; //Ãë·ÖÊ±ÈÕÔÂÖÜÄê ×îµÍÎ»¶ÁÐ´Î
             -»
  23          code unsigned char read_rtc_address[7]={0x81,0x83,0x85,0x87,0x89,0x8b,0x8d};  
  24          
  25          
  26          code unsigned char table[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x40}; 
  27                                           //¹²ÒõÊýÂë¹Ü 0-9  '-' 'Ï¨Ãð¡®±í
  28          
  29          /******************************************************************/
  30          /*                    º¯ÊýÉùÃ÷                                    */
  31          /******************************************************************/                                                                                            
  32          void Write_Ds1302_byte(unsigned char temp); 
  33          void Write_Ds1302( unsigned char address,unsigned char dat );
  34          unsigned char Read_Ds1302 ( unsigned char address );
  35          void Read_RTC(void);//read RTC 
  36          void Set_RTC(void); //set RTC 
  37          void InitTIMER0(void);//inital timer0
  38          /******************************************************************/
  39          /*                   Ö÷º¯Êý                                       */
  40          /******************************************************************/
  41          void main(void)    
  42          {
  43   1          InitTIMER0();          //³õÊ¼»¯¶¨Ê±Æ÷0
  44   1              //Set_RTC();             //Ð´ÈëÊ±ÖÓÖµ£¬Èç¹ûÊ¹ÓÃ±¸ÓÃµç³ØÊ±ºò£¬²»ÐèÒªÃ»Ã¿´ÎÉÏµçÐ´Èë£¬´Ë³ÌÐòÓ¦¸ÃÆÁ±Î
  45   1      
  46   1              while(1)
  47   1              {
  48   2                if(ReadRTC_Flag)
  49   2                {
  50   3                  ReadRTC_Flag=0;
  51   3                      Read_RTC();
  52   3              
  53   3                              l_tmpdisplay[0]=l_tmpdate[2]/16;                        //Êý¾ÝµÄ×ª»»£¬ÒòÎÒÃÇ²ÉÓÃÊýÂë¹Ü0~9µÄÏÔÊ¾,½«Êý¾Ý·Ö¿ª
  54   3                              l_tmpdisplay[1]=l_tmpdate[2]&0x0f;
C51 COMPILER V9.01   DS1302                                                                08/05/2016 17:44:25 PAGE 2   

  55   3                              l_tmpdisplay[2]=10;                                             //¼ÓÈë"-"
  56   3                              l_tmpdisplay[3]=l_tmpdate[1]/16;
  57   3                              l_tmpdisplay[4]=l_tmpdate[1]&0x0f;
  58   3                              l_tmpdisplay[5]=10;
  59   3                              l_tmpdisplay[6]=l_tmpdate[0]/16;
  60   3                              l_tmpdisplay[7]=l_tmpdate[0]&0x0f;
  61   3              
  62   3               }
  63   2              }
  64   1      }
  65          /******************************************************************/
  66          /*                   ¶¨Ê±Æ÷0³õÊ¼»¯                                */
  67          /******************************************************************/
  68          void InitTIMER0(void)
  69          {
  70   1       TMOD|=0x01;//¶¨Ê±Æ÷ÉèÖÃ 16Î»
  71   1       TH0=0xef;//³õÊ¼»¯Öµ
  72   1       TL0=0xf0;
  73   1       ET0=1;
  74   1       TR0=1;
  75   1       EA=1;
  76   1      }
  77          
  78          
  79          /******************************************************************/
  80          /*                   Ð´Ò»¸ö×Ö½Ú                                   */
  81          /******************************************************************/
  82          void Write_Ds1302_Byte(unsigned  char temp) 
  83          {
  84   1       unsigned char i;
  85   1       for (i=0;i<8;i++)      //Ñ­»·8´Î Ð´ÈëÊý¾Ý
  86   1        { 
  87   2         SCK=0;
  88   2           SDA=temp&0x01;     //Ã¿´Î´«ÊäµÍ×Ö½Ú 
  89   2           temp>>=1;                  //ÓÒÒÆÒ»Î»
  90   2           SCK=1;
  91   2         }
  92   1      }   
  93          /******************************************************************/
  94          /*                  Ð´ÈëDS1302                                    */
  95          /******************************************************************/
  96          void Write_Ds1302( unsigned char address,unsigned char dat )     
  97          {
  98   1              RST=0;
  99   1              _nop_();
 100   1              SCK=0;
 101   1              _nop_();
 102   1              RST=1;  
 103   1              _nop_();                    //Æô¶¯
 104   1              Write_Ds1302_Byte(address);     //·¢ËÍµØÖ·
 105   1              Write_Ds1302_Byte(dat);         //·¢ËÍÊý¾Ý
 106   1              RST=0;                              //»Ö¸´
 107   1      }
 108          /******************************************************************/
 109          /*                   ¶Á³öDS1302Êý¾Ý                               */
 110          /******************************************************************/
 111          unsigned char Read_Ds1302 ( unsigned char address )
 112          {
 113   1              unsigned char i,temp=0x00;
 114   1              RST=0;
 115   1              _nop_();
 116   1              _nop_();
C51 COMPILER V9.01   DS1302                                                                08/05/2016 17:44:25 PAGE 3   

 117   1              SCK=0;
 118   1              _nop_();
 119   1              _nop_();
 120   1              RST=1;
 121   1              _nop_();
 122   1              _nop_();
 123   1              Write_Ds1302_Byte(address);
 124   1              for (i=0;i<8;i++)               //Ñ­»·8´Î ¶ÁÈ¡Êý¾Ý
 125   1              {               
 126   2                      if(SDA)
 127   2                      temp|=0x80;                     //Ã¿´Î´«ÊäµÍ×Ö½Ú
 128   2                      SCK=0;
 129   2                      temp>>=1;                       //ÓÒÒÆÒ»Î»
 130   2                      _nop_();
 131   2                 _nop_();
 132   2                 _nop_();
 133   2                      SCK=1;
 134   2              } 
 135   1              RST=0;
 136   1              _nop_();                        //ÒÔÏÂÎªDS1302¸´Î»µÄÎÈ¶¨Ê±¼ä
 137   1              _nop_();
 138   1              RST=0;
 139   1              SCK=0;
 140   1              _nop_();
 141   1              _nop_();
 142   1              _nop_();
 143   1              _nop_();
 144   1              SCK=1;
 145   1              _nop_();
 146   1              _nop_();
 147   1              SDA=0;
 148   1              _nop_();
 149   1              _nop_();
 150   1              SDA=1;
 151   1              _nop_();
 152   1              _nop_();
 153   1              return (temp);                  //·µ»Ø
 154   1      }
 155          /******************************************************************/
 156          /*                   ¶ÁÊ±ÖÓÊý¾Ý                                   */
 157          /******************************************************************/
 158          void Read_RTC(void)             //¶ÁÈ¡ ÈÕÀú
 159          {
 160   1       unsigned char i,*p;
 161   1       p=read_rtc_address;        //µØÖ·´«µÝ
 162   1       for(i=0;i<7;i++)                   //·Ö7´Î¶ÁÈ¡ Ãë·ÖÊ±ÈÕÔÂÖÜÄê
 163   1       {
 164   2        l_tmpdate[i]=Read_Ds1302(*p);
 165   2        p++;
 166   2       }
 167   1      }
 168          /******************************************************************/
 169          /*                  Éè¶¨Ê±ÖÓÊý¾Ý                                  */
 170          /******************************************************************/
 171          void Set_RTC(void)                  //Éè¶¨ ÈÕÀú
 172          {
 173   1              unsigned char i,*p,tmp;
 174   1              for(i=0;i<7;i++){       //BCD´¦Àí
 175   2                      tmp=l_tmpdate[i]/10;
 176   2                      l_tmpdate[i]=l_tmpdate[i]%10;
 177   2                      l_tmpdate[i]=l_tmpdate[i]+tmp*16;
 178   2              }  
C51 COMPILER V9.01   DS1302                                                                08/05/2016 17:44:25 PAGE 4   

 179   1              Write_Ds1302(0x8E,0X00);
 180   1              
 181   1              p=write_rtc_address;    //´«µØÖ·        
 182   1              for(i=0;i<7;i++)                //7´ÎÐ´Èë Ãë·ÖÊ±ÈÕÔÂÖÜÄê
 183   1              {
 184   2                        Write_Ds1302(*p,l_tmpdate[i]);
 185   2                       p++;  
 186   2               }
 187   1               Write_Ds1302(0x8E,0x80);
 188   1      }
 189          /******************************************************************/
 190          /*                   ¶¨Ê±Æ÷ÖÐ¶Ïº¯Êý                               */
 191          /******************************************************************/
 192          void tim(void) interrupt 1 using 1
 193                                      //ÖÐ¶Ï£¬ÓÃÓÚÊýÂë¹ÜÉ¨Ãè
 194          {
 195   1      
 196   1          static unsigned char i,num;
 197   1          TH0=0xf5;
 198   1          TL0=0xe0;
 199   1      
 200   1              P0=table[l_tmpdisplay[i]];              //²é±í·¨µÃµ½ÒªÏÔÊ¾Êý×ÖµÄÊýÂë¶Î
 201   1      
 202   1          switch(i)                                     
 203   1                   {      
 204   2                              case 0:LS138A=0; LS138B=0; LS138C=0; break;         
 205   2                      case 1:LS138A=1; LS138B=0; LS138C=0; break;                     
 206   2                      case 2:LS138A=0; LS138B=1; LS138C=0; break; 
 207   2                      case 3:LS138A=1; LS138B=1; LS138C=0; break; 
 208   2                              case 4:LS138A=0; LS138B=0; LS138C=1; break;
 209   2                              case 5:LS138A=1; LS138B=0; LS138C=1; break;
 210   2                              case 6:LS138A=0; LS138B=1; LS138C=1; break;
 211   2                              case 7:LS138A=1; LS138B=1; LS138C=1; break;
 212   2                              
 213   2                   }
 214   1              i++;
 215   1              if(i==8)
 216   1                {
 217   2                 i=0;
 218   2                 num++;
 219   2                 if(10==num)       //¸ô¶ÎÊ±¼ä¶ÁÈ¡1302µÄÊý¾Ý¡£Ê±¼ä¼ä¸ô¿ÉÒÔµ÷Õû
 220   2                   {
 221   3                       ReadRTC_Flag=1; //Ê¹ÓÃ±êÖ¾Î»ÅÐ¶Ï
 222   3                       num=0;
 223   3                       }
 224   2                }
 225   1       }
 226          
 227          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    439    ----
   CONSTANT SIZE    =     25    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     17    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
