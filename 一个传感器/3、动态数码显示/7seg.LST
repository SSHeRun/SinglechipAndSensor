C51 COMPILER V9.01   7SEG                                                                  07/23/2016 17:07:43 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE 7SEG
OBJECT MODULE PLACED IN 7seg.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE 7seg.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*******************************************************************************
   2          *  数码管显示（译码器位选 共阴极）            *
   3          ********************************************************************************/
   4          
   5          #include <reg51.h> 
   6          
   7          sbit LS138A = P2^0;     //定义138译码器的输入A脚由P2.0控制 
   8          sbit LS138B = P2^1;         //定义138译码器的输入脚B由P2.1控制
   9          sbit LS138C = P2^2;     //定义138译码器的输入脚C由P2.2控制
  10          
  11          void delay(unsigned int i);      //函数声名
  12          
  13          char DelayCNT;
  14           
  15          //此表为 LED 的字模, 共阴数码管   0-9  - 
  16          unsigned char code Disp_Tab[] = {0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x40}; 
  17          
  18          /************主函数**********************/ 
  19          main()
  20          {  
  21   1         unsigned int i,LedNumVal ;
  22   1         unsigned int LedOut[10];
  23   1         
  24   1         DelayCNT=0;
  25   1      
  26   1        while(1)  //进入循环状态
  27   1        {      
  28   2           if(++DelayCNT>=50)
  29   2               {
  30   3                      DelayCNT=0;                //延时计数 每扫描一次加一次
  31   3                  ++LedNumVal;       //每隔50个扫描周期加一次
  32   3               }
  33   2      
  34   2               LedOut[0]=Disp_Tab[LedNumVal%10000/1000];
  35   2           LedOut[1]=Disp_Tab[LedNumVal%1000/100]|0x80;
  36   2           LedOut[2]=Disp_Tab[LedNumVal%100/10];
  37   2           LedOut[3]=Disp_Tab[LedNumVal%10];
  38   2               
  39   2               LedOut[4]=Disp_Tab[LedNumVal%10000/1000];         //千位
  40   2           LedOut[5]=Disp_Tab[LedNumVal%1000/100]|0x80;  //百位带小数点
  41   2           LedOut[6]=Disp_Tab[LedNumVal%100/10];                 //十位
  42   2           LedOut[7]=Disp_Tab[LedNumVal%10];             //个位        
  43   2      
  44   2              
  45   2               for( i=0; i<8; i++)  //实现8位动态扫描循环
  46   2               {       
  47   3                P0 = LedOut[i];  //将字模送到P0口显示
  48   3                              
  49   3                switch(i)       //使用switch 语句控制位选  也可以是用查表的方式 学员可以试着自己修改                            
  50   3                   {      
  51   4                              case 0:LS138A=0; LS138B=0; LS138C=0;  break;         
  52   4                      case 1:LS138A=1; LS138B=0; LS138C=0;  break;                    
  53   4                      case 2:LS138A=0; LS138B=1; LS138C=0;  break; 
  54   4                      case 3:LS138A=1; LS138B=1; LS138C=0;  break; 
  55   4                              case 4:LS138A=0; LS138B=0; LS138C=1;  break;
C51 COMPILER V9.01   7SEG                                                                  07/23/2016 17:07:43 PAGE 2   

  56   4                              case 5:LS138A=1; LS138B=0; LS138C=1;  break;
  57   4                              case 6:LS138A=0; LS138B=1; LS138C=1;  break;
  58   4                              case 7:LS138A=1; LS138B=1; LS138C=1;  break;
  59   4                        
  60   4                   }
  61   3                       
  62   3                      delay(150);
  63   3                }
  64   2               
  65   2        }   
  66   1      }       
  67          
  68          /***************************************************************************
  69          *                                                                                                                                                  *
  70          *                                   延时程序                                                           *
  71          ****************************************************************************/
  72          void delay(unsigned int i)
  73          {
  74   1          char j;
  75   1          for(i; i > 0; i--)
  76   1              for(j = 200; j > 0; j--);
  77   1      }
  78          
  79          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    460    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1      24
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
